   0  $accept : file $end

   1  file : declarations
   2       |

   3  declarations : declaration
   4               | declarations declaration

   5  declaration : var ';'
   6              | function

   7  var : type tIDENTIFIER
   8      | tPUBLIC type tIDENTIFIER
   9      | tUSE type tIDENTIFIER
  10      | type tIDENTIFIER '=' expr
  11      | tPUBLIC type tIDENTIFIER '=' expr
  12      | tUSE type tIDENTIFIER '=' expr

  13  function : tPROCEDURE tIDENTIFIER '(' functionargs ')'
  14           | tPROCEDURE tUSE type_void tIDENTIFIER '(' functionargs ')'
  15           | tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')'
  16           | type tIDENTIFIER '(' functionargs ')'
  17           | tUSE type tIDENTIFIER '(' functionargs ')'
  18           | tPUBLIC type tIDENTIFIER '(' functionargs ')'
  19           | type tIDENTIFIER '(' functionargs ')' '=' literal
  20           | tPUBLIC type tIDENTIFIER '(' functionargs ')' '=' literal
  21           | tPROCEDURE type_void tIDENTIFIER '(' functionargs ')' block
  22           | tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' block
  23           | type tIDENTIFIER '(' functionargs ')' block
  24           | tPUBLIC type tIDENTIFIER '(' functionargs ')' block
  25           | tPROCEDURE tIDENTIFIER '(' functionargs ')' block
  26           | tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' '=' literal block
  27           | type tIDENTIFIER '(' functionargs ')' '=' literal block
  28           | tPUBLIC type tIDENTIFIER '(' functionargs ')' '=' literal block

  29  functionarg : type tIDENTIFIER

  30  functionargs :
  31               | functionarg
  32               | functionargs ',' functionarg

  33  type : tINT
  34       | tREAL
  35       | tSTRING
  36       | '[' type ']'

  37  type_void : '!'

  38  block : '{' '}'
  39        | '{' declarations '}'
  40        | '{' list '}'
  41        | '{' declarations list '}'

  42  list : stmt
  43       | list stmt

  44  stmt : expr ';'
  45       | tWHILE '(' expr ')' stmt
  46       | tIF '(' expr ')' stmt
  47       | tIF '(' expr ')' stmt tELSE stmt
  48       | tIF '(' expr ')' stmt tELSIF elsif
  49       | expr tPRINT
  50       | expr tPRINTLN
  51       | tNEXT
  52       | tSTOP
  53       | tRETURN
  54       | block
  55       | tSWEEP '+' '(' lval ':' expr ':' expr ')' stmt
  56       | tSWEEP '+' '(' lval ':' expr ':' expr ':' expr ')' stmt
  57       | tSWEEP '-' '(' lval ':' expr ':' expr ':' expr ')' stmt
  58       | tSWEEP '-' '(' lval ':' expr ':' expr ')' stmt

  59  elsif : '(' expr ')' stmt
  60        | '(' expr ')' stmt tELSE stmt
  61        | '(' expr ')' stmt tELSIF elsif

  62  expr : literal
  63       | tNULL
  64       | '+' expr
  65       | '-' expr
  66       | '~' expr
  67       | expr '+' expr
  68       | expr '-' expr
  69       | expr '*' expr
  70       | expr '/' expr
  71       | expr '%' expr
  72       | expr '<' expr
  73       | expr '>' expr
  74       | expr tGE expr
  75       | expr tLE expr
  76       | expr tNE expr
  77       | expr tEQ expr
  78       | expr tAND expr
  79       | expr tOR expr
  80       | '(' expr ')'
  81       | tREAD
  82       | lval
  83       | lval '=' expr
  84       | lval '?'
  85       | tIDENTIFIER '(' argscall ')'

  86  literal : tINTEGER
  87          | tDOUBLE
  88          | string

  89  string : string tSTRING
  90         | tSTRING

  91  argscall :
  92           | calls

  93  calls : expr
  94        | calls ',' expr

  95  lval : tIDENTIFIER
  96       | expr '[' expr ']'

state 0
	$accept : . file $end  (0)
	file : .  (2)

	tSTRING  shift 1
	tPUBLIC  shift 2
	tUSE  shift 3
	tPROCEDURE  shift 4
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	$end  reduce 2

	file  goto 8
	declaration  goto 9
	var  goto 10
	declarations  goto 11
	type  goto 12
	function  goto 13


state 1
	type : tSTRING .  (35)

	.  reduce 35


state 2
	var : tPUBLIC . type tIDENTIFIER  (8)
	var : tPUBLIC . type tIDENTIFIER '=' expr  (11)
	function : tPUBLIC . type tIDENTIFIER '(' functionargs ')'  (18)
	function : tPUBLIC . type tIDENTIFIER '(' functionargs ')' '=' literal  (20)
	function : tPUBLIC . type tIDENTIFIER '(' functionargs ')' block  (24)
	function : tPUBLIC . type tIDENTIFIER '(' functionargs ')' '=' literal block  (28)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	.  error

	type  goto 14


state 3
	var : tUSE . type tIDENTIFIER  (9)
	var : tUSE . type tIDENTIFIER '=' expr  (12)
	function : tUSE . type tIDENTIFIER '(' functionargs ')'  (17)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	.  error

	type  goto 15


state 4
	function : tPROCEDURE . tIDENTIFIER '(' functionargs ')'  (13)
	function : tPROCEDURE . tUSE type_void tIDENTIFIER '(' functionargs ')'  (14)
	function : tPROCEDURE . tPUBLIC type_void tIDENTIFIER '(' functionargs ')'  (15)
	function : tPROCEDURE . type_void tIDENTIFIER '(' functionargs ')' block  (21)
	function : tPROCEDURE . tPUBLIC type_void tIDENTIFIER '(' functionargs ')' block  (22)
	function : tPROCEDURE . tIDENTIFIER '(' functionargs ')' block  (25)
	function : tPROCEDURE . tPUBLIC type_void tIDENTIFIER '(' functionargs ')' '=' literal block  (26)

	tIDENTIFIER  shift 16
	tPUBLIC  shift 17
	tUSE  shift 18
	'!'  shift 19
	.  error

	type_void  goto 20


state 5
	type : tINT .  (33)

	.  reduce 33


state 6
	type : tREAL .  (34)

	.  reduce 34


state 7
	type : '[' . type ']'  (36)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	.  error

	type  goto 21


state 8
	$accept : file . $end  (0)

	$end  accept


state 9
	declarations : declaration .  (3)

	.  reduce 3


state 10
	declaration : var . ';'  (5)

	';'  shift 22
	.  error


state 11
	file : declarations .  (1)
	declarations : declarations . declaration  (4)

	tSTRING  shift 1
	tPUBLIC  shift 2
	tUSE  shift 3
	tPROCEDURE  shift 4
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	$end  reduce 1

	declaration  goto 23
	var  goto 10
	type  goto 12
	function  goto 13


state 12
	var : type . tIDENTIFIER  (7)
	var : type . tIDENTIFIER '=' expr  (10)
	function : type . tIDENTIFIER '(' functionargs ')'  (16)
	function : type . tIDENTIFIER '(' functionargs ')' '=' literal  (19)
	function : type . tIDENTIFIER '(' functionargs ')' block  (23)
	function : type . tIDENTIFIER '(' functionargs ')' '=' literal block  (27)

	tIDENTIFIER  shift 24
	.  error


state 13
	declaration : function .  (6)

	.  reduce 6


state 14
	var : tPUBLIC type . tIDENTIFIER  (8)
	var : tPUBLIC type . tIDENTIFIER '=' expr  (11)
	function : tPUBLIC type . tIDENTIFIER '(' functionargs ')'  (18)
	function : tPUBLIC type . tIDENTIFIER '(' functionargs ')' '=' literal  (20)
	function : tPUBLIC type . tIDENTIFIER '(' functionargs ')' block  (24)
	function : tPUBLIC type . tIDENTIFIER '(' functionargs ')' '=' literal block  (28)

	tIDENTIFIER  shift 25
	.  error


state 15
	var : tUSE type . tIDENTIFIER  (9)
	var : tUSE type . tIDENTIFIER '=' expr  (12)
	function : tUSE type . tIDENTIFIER '(' functionargs ')'  (17)

	tIDENTIFIER  shift 26
	.  error


state 16
	function : tPROCEDURE tIDENTIFIER . '(' functionargs ')'  (13)
	function : tPROCEDURE tIDENTIFIER . '(' functionargs ')' block  (25)

	'('  shift 27
	.  error


state 17
	function : tPROCEDURE tPUBLIC . type_void tIDENTIFIER '(' functionargs ')'  (15)
	function : tPROCEDURE tPUBLIC . type_void tIDENTIFIER '(' functionargs ')' block  (22)
	function : tPROCEDURE tPUBLIC . type_void tIDENTIFIER '(' functionargs ')' '=' literal block  (26)

	'!'  shift 19
	.  error

	type_void  goto 28


state 18
	function : tPROCEDURE tUSE . type_void tIDENTIFIER '(' functionargs ')'  (14)

	'!'  shift 19
	.  error

	type_void  goto 29


state 19
	type_void : '!' .  (37)

	.  reduce 37


state 20
	function : tPROCEDURE type_void . tIDENTIFIER '(' functionargs ')' block  (21)

	tIDENTIFIER  shift 30
	.  error


state 21
	type : '[' type . ']'  (36)

	']'  shift 31
	.  error


state 22
	declaration : var ';' .  (5)

	.  reduce 5


state 23
	declarations : declarations declaration .  (4)

	.  reduce 4


state 24
	var : type tIDENTIFIER .  (7)
	var : type tIDENTIFIER . '=' expr  (10)
	function : type tIDENTIFIER . '(' functionargs ')'  (16)
	function : type tIDENTIFIER . '(' functionargs ')' '=' literal  (19)
	function : type tIDENTIFIER . '(' functionargs ')' block  (23)
	function : type tIDENTIFIER . '(' functionargs ')' '=' literal block  (27)

	'='  shift 32
	'('  shift 33
	';'  reduce 7


state 25
	var : tPUBLIC type tIDENTIFIER .  (8)
	var : tPUBLIC type tIDENTIFIER . '=' expr  (11)
	function : tPUBLIC type tIDENTIFIER . '(' functionargs ')'  (18)
	function : tPUBLIC type tIDENTIFIER . '(' functionargs ')' '=' literal  (20)
	function : tPUBLIC type tIDENTIFIER . '(' functionargs ')' block  (24)
	function : tPUBLIC type tIDENTIFIER . '(' functionargs ')' '=' literal block  (28)

	'='  shift 34
	'('  shift 35
	';'  reduce 8


state 26
	var : tUSE type tIDENTIFIER .  (9)
	var : tUSE type tIDENTIFIER . '=' expr  (12)
	function : tUSE type tIDENTIFIER . '(' functionargs ')'  (17)

	'='  shift 36
	'('  shift 37
	';'  reduce 9


state 27
	function : tPROCEDURE tIDENTIFIER '(' . functionargs ')'  (13)
	function : tPROCEDURE tIDENTIFIER '(' . functionargs ')' block  (25)
	functionargs : .  (30)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	')'  reduce 30
	','  reduce 30

	functionarg  goto 38
	functionargs  goto 39
	type  goto 40


state 28
	function : tPROCEDURE tPUBLIC type_void . tIDENTIFIER '(' functionargs ')'  (15)
	function : tPROCEDURE tPUBLIC type_void . tIDENTIFIER '(' functionargs ')' block  (22)
	function : tPROCEDURE tPUBLIC type_void . tIDENTIFIER '(' functionargs ')' '=' literal block  (26)

	tIDENTIFIER  shift 41
	.  error


state 29
	function : tPROCEDURE tUSE type_void . tIDENTIFIER '(' functionargs ')'  (14)

	tIDENTIFIER  shift 42
	.  error


state 30
	function : tPROCEDURE type_void tIDENTIFIER . '(' functionargs ')' block  (21)

	'('  shift 43
	.  error


state 31
	type : '[' type ']' .  (36)

	.  reduce 36


state 32
	var : type tIDENTIFIER '=' . expr  (10)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 54
	literal  goto 55
	lval  goto 56
	string  goto 57


state 33
	function : type tIDENTIFIER '(' . functionargs ')'  (16)
	function : type tIDENTIFIER '(' . functionargs ')' '=' literal  (19)
	function : type tIDENTIFIER '(' . functionargs ')' block  (23)
	function : type tIDENTIFIER '(' . functionargs ')' '=' literal block  (27)
	functionargs : .  (30)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	')'  reduce 30
	','  reduce 30

	functionarg  goto 38
	functionargs  goto 58
	type  goto 40


state 34
	var : tPUBLIC type tIDENTIFIER '=' . expr  (11)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 59
	literal  goto 55
	lval  goto 56
	string  goto 57


state 35
	function : tPUBLIC type tIDENTIFIER '(' . functionargs ')'  (18)
	function : tPUBLIC type tIDENTIFIER '(' . functionargs ')' '=' literal  (20)
	function : tPUBLIC type tIDENTIFIER '(' . functionargs ')' block  (24)
	function : tPUBLIC type tIDENTIFIER '(' . functionargs ')' '=' literal block  (28)
	functionargs : .  (30)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	')'  reduce 30
	','  reduce 30

	functionarg  goto 38
	functionargs  goto 60
	type  goto 40


state 36
	var : tUSE type tIDENTIFIER '=' . expr  (12)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 61
	literal  goto 55
	lval  goto 56
	string  goto 57


state 37
	function : tUSE type tIDENTIFIER '(' . functionargs ')'  (17)
	functionargs : .  (30)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	')'  reduce 30
	','  reduce 30

	functionarg  goto 38
	functionargs  goto 62
	type  goto 40


state 38
	functionargs : functionarg .  (31)

	.  reduce 31


state 39
	function : tPROCEDURE tIDENTIFIER '(' functionargs . ')'  (13)
	function : tPROCEDURE tIDENTIFIER '(' functionargs . ')' block  (25)
	functionargs : functionargs . ',' functionarg  (32)

	')'  shift 63
	','  shift 64
	.  error


state 40
	functionarg : type . tIDENTIFIER  (29)

	tIDENTIFIER  shift 65
	.  error


state 41
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER . '(' functionargs ')'  (15)
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER . '(' functionargs ')' block  (22)
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER . '(' functionargs ')' '=' literal block  (26)

	'('  shift 66
	.  error


state 42
	function : tPROCEDURE tUSE type_void tIDENTIFIER . '(' functionargs ')'  (14)

	'('  shift 67
	.  error


state 43
	function : tPROCEDURE type_void tIDENTIFIER '(' . functionargs ')' block  (21)
	functionargs : .  (30)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	')'  reduce 30
	','  reduce 30

	functionarg  goto 38
	functionargs  goto 68
	type  goto 40


state 44
	literal : tINTEGER .  (86)

	.  reduce 86


state 45
	literal : tDOUBLE .  (87)

	.  reduce 87


state 46
	expr : tIDENTIFIER . '(' argscall ')'  (85)
	lval : tIDENTIFIER .  (95)

	'('  shift 69
	tPRINT  reduce 95
	tPRINTLN  reduce 95
	tAND  reduce 95
	tOR  reduce 95
	'+'  reduce 95
	'-'  reduce 95
	'='  reduce 95
	'['  reduce 95
	tGE  reduce 95
	tLE  reduce 95
	tEQ  reduce 95
	tNE  reduce 95
	'>'  reduce 95
	'<'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	'%'  reduce 95
	';'  reduce 95
	')'  reduce 95
	','  reduce 95
	']'  reduce 95
	':'  reduce 95
	'?'  reduce 95


state 47
	string : tSTRING .  (90)

	.  reduce 90


state 48
	expr : tNULL .  (63)

	.  reduce 63


state 49
	expr : tREAD .  (81)

	.  reduce 81


state 50
	expr : '~' . expr  (66)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 70
	literal  goto 55
	lval  goto 56
	string  goto 57


state 51
	expr : '+' . expr  (64)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 71
	literal  goto 55
	lval  goto 56
	string  goto 57


state 52
	expr : '-' . expr  (65)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 72
	literal  goto 55
	lval  goto 56
	string  goto 57


state 53
	expr : '(' . expr ')'  (80)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 73
	literal  goto 55
	lval  goto 56
	string  goto 57


state 54
	var : type tIDENTIFIER '=' expr .  (10)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	';'  reduce 10


state 55
	expr : literal .  (62)

	.  reduce 62


state 56
	expr : lval .  (82)
	expr : lval . '=' expr  (83)
	expr : lval . '?'  (84)

	'='  shift 88
	'?'  shift 89
	tPRINT  reduce 82
	tPRINTLN  reduce 82
	tAND  reduce 82
	tOR  reduce 82
	'+'  reduce 82
	'-'  reduce 82
	'['  reduce 82
	tGE  reduce 82
	tLE  reduce 82
	tEQ  reduce 82
	tNE  reduce 82
	'>'  reduce 82
	'<'  reduce 82
	'*'  reduce 82
	'/'  reduce 82
	'%'  reduce 82
	';'  reduce 82
	')'  reduce 82
	','  reduce 82
	']'  reduce 82
	':'  reduce 82


state 57
	literal : string .  (88)
	string : string . tSTRING  (89)

	tSTRING  shift 90
	$end  reduce 88
	tINTEGER  reduce 88
	tDOUBLE  reduce 88
	tIDENTIFIER  reduce 88
	tPUBLIC  reduce 88
	tUSE  reduce 88
	tPROCEDURE  reduce 88
	tINT  reduce 88
	tREAL  reduce 88
	tIF  reduce 88
	tWHILE  reduce 88
	tSWEEP  reduce 88
	tNEXT  reduce 88
	tNULL  reduce 88
	tSTOP  reduce 88
	tRETURN  reduce 88
	tREAD  reduce 88
	tPRINT  reduce 88
	tPRINTLN  reduce 88
	tAND  reduce 88
	tOR  reduce 88
	'~'  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'['  reduce 88
	'('  reduce 88
	tGE  reduce 88
	tLE  reduce 88
	tEQ  reduce 88
	tNE  reduce 88
	'>'  reduce 88
	'<'  reduce 88
	'*'  reduce 88
	'/'  reduce 88
	'%'  reduce 88
	'{'  reduce 88
	'}'  reduce 88
	';'  reduce 88
	')'  reduce 88
	','  reduce 88
	']'  reduce 88
	':'  reduce 88


state 58
	function : type tIDENTIFIER '(' functionargs . ')'  (16)
	function : type tIDENTIFIER '(' functionargs . ')' '=' literal  (19)
	function : type tIDENTIFIER '(' functionargs . ')' block  (23)
	function : type tIDENTIFIER '(' functionargs . ')' '=' literal block  (27)
	functionargs : functionargs . ',' functionarg  (32)

	')'  shift 91
	','  shift 64
	.  error


state 59
	var : tPUBLIC type tIDENTIFIER '=' expr .  (11)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	';'  reduce 11


state 60
	function : tPUBLIC type tIDENTIFIER '(' functionargs . ')'  (18)
	function : tPUBLIC type tIDENTIFIER '(' functionargs . ')' '=' literal  (20)
	function : tPUBLIC type tIDENTIFIER '(' functionargs . ')' block  (24)
	function : tPUBLIC type tIDENTIFIER '(' functionargs . ')' '=' literal block  (28)
	functionargs : functionargs . ',' functionarg  (32)

	')'  shift 92
	','  shift 64
	.  error


state 61
	var : tUSE type tIDENTIFIER '=' expr .  (12)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	';'  reduce 12


state 62
	function : tUSE type tIDENTIFIER '(' functionargs . ')'  (17)
	functionargs : functionargs . ',' functionarg  (32)

	')'  shift 93
	','  shift 64
	.  error


state 63
	function : tPROCEDURE tIDENTIFIER '(' functionargs ')' .  (13)
	function : tPROCEDURE tIDENTIFIER '(' functionargs ')' . block  (25)

	'{'  shift 94
	$end  reduce 13
	tINTEGER  reduce 13
	tDOUBLE  reduce 13
	tIDENTIFIER  reduce 13
	tSTRING  reduce 13
	tPUBLIC  reduce 13
	tUSE  reduce 13
	tPROCEDURE  reduce 13
	tINT  reduce 13
	tREAL  reduce 13
	tIF  reduce 13
	tWHILE  reduce 13
	tSWEEP  reduce 13
	tNEXT  reduce 13
	tNULL  reduce 13
	tSTOP  reduce 13
	tRETURN  reduce 13
	tREAD  reduce 13
	'~'  reduce 13
	'+'  reduce 13
	'-'  reduce 13
	'['  reduce 13
	'('  reduce 13
	'}'  reduce 13

	block  goto 95


state 64
	functionargs : functionargs ',' . functionarg  (32)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	.  error

	functionarg  goto 96
	type  goto 40


state 65
	functionarg : type tIDENTIFIER .  (29)

	.  reduce 29


state 66
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' . functionargs ')'  (15)
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' . functionargs ')' block  (22)
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' . functionargs ')' '=' literal block  (26)
	functionargs : .  (30)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	')'  reduce 30
	','  reduce 30

	functionarg  goto 38
	functionargs  goto 97
	type  goto 40


state 67
	function : tPROCEDURE tUSE type_void tIDENTIFIER '(' . functionargs ')'  (14)
	functionargs : .  (30)

	tSTRING  shift 1
	tINT  shift 5
	tREAL  shift 6
	'['  shift 7
	')'  reduce 30
	','  reduce 30

	functionarg  goto 38
	functionargs  goto 98
	type  goto 40


state 68
	function : tPROCEDURE type_void tIDENTIFIER '(' functionargs . ')' block  (21)
	functionargs : functionargs . ',' functionarg  (32)

	')'  shift 99
	','  shift 64
	.  error


state 69
	expr : tIDENTIFIER '(' . argscall ')'  (85)
	argscall : .  (91)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	')'  reduce 91

	argscall  goto 100
	calls  goto 101
	expr  goto 102
	literal  goto 55
	lval  goto 56
	string  goto 57


state 70
	expr : '~' expr .  (66)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	.  reduce 66


state 71
	expr : '+' expr .  (64)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	.  reduce 64


state 72
	expr : '-' expr .  (65)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	.  reduce 65


state 73
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	expr : '(' expr . ')'  (80)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  shift 103
	.  error


state 74
	expr : expr tAND . expr  (78)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 104
	literal  goto 55
	lval  goto 56
	string  goto 57


state 75
	expr : expr tOR . expr  (79)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 105
	literal  goto 55
	lval  goto 56
	string  goto 57


state 76
	expr : expr '+' . expr  (67)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 106
	literal  goto 55
	lval  goto 56
	string  goto 57


state 77
	expr : expr '-' . expr  (68)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 107
	literal  goto 55
	lval  goto 56
	string  goto 57


state 78
	lval : expr '[' . expr ']'  (96)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 108
	literal  goto 55
	lval  goto 56
	string  goto 57


state 79
	expr : expr tGE . expr  (74)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 109
	literal  goto 55
	lval  goto 56
	string  goto 57


state 80
	expr : expr tLE . expr  (75)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 110
	literal  goto 55
	lval  goto 56
	string  goto 57


state 81
	expr : expr tEQ . expr  (77)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 111
	literal  goto 55
	lval  goto 56
	string  goto 57


state 82
	expr : expr tNE . expr  (76)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 112
	literal  goto 55
	lval  goto 56
	string  goto 57


state 83
	expr : expr '>' . expr  (73)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 113
	literal  goto 55
	lval  goto 56
	string  goto 57


state 84
	expr : expr '<' . expr  (72)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 114
	literal  goto 55
	lval  goto 56
	string  goto 57


state 85
	expr : expr '*' . expr  (69)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 115
	literal  goto 55
	lval  goto 56
	string  goto 57


state 86
	expr : expr '/' . expr  (70)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 116
	literal  goto 55
	lval  goto 56
	string  goto 57


state 87
	expr : expr '%' . expr  (71)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 117
	literal  goto 55
	lval  goto 56
	string  goto 57


state 88
	expr : lval '=' . expr  (83)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 118
	literal  goto 55
	lval  goto 56
	string  goto 57


state 89
	expr : lval '?' .  (84)

	.  reduce 84


state 90
	string : string tSTRING .  (89)

	.  reduce 89


state 91
	function : type tIDENTIFIER '(' functionargs ')' .  (16)
	function : type tIDENTIFIER '(' functionargs ')' . '=' literal  (19)
	function : type tIDENTIFIER '(' functionargs ')' . block  (23)
	function : type tIDENTIFIER '(' functionargs ')' . '=' literal block  (27)

	'='  shift 119
	'{'  shift 94
	$end  reduce 16
	tINTEGER  reduce 16
	tDOUBLE  reduce 16
	tIDENTIFIER  reduce 16
	tSTRING  reduce 16
	tPUBLIC  reduce 16
	tUSE  reduce 16
	tPROCEDURE  reduce 16
	tINT  reduce 16
	tREAL  reduce 16
	tIF  reduce 16
	tWHILE  reduce 16
	tSWEEP  reduce 16
	tNEXT  reduce 16
	tNULL  reduce 16
	tSTOP  reduce 16
	tRETURN  reduce 16
	tREAD  reduce 16
	'~'  reduce 16
	'+'  reduce 16
	'-'  reduce 16
	'['  reduce 16
	'('  reduce 16
	'}'  reduce 16

	block  goto 120


state 92
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' .  (18)
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' . '=' literal  (20)
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' . block  (24)
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' . '=' literal block  (28)

	'='  shift 121
	'{'  shift 94
	$end  reduce 18
	tINTEGER  reduce 18
	tDOUBLE  reduce 18
	tIDENTIFIER  reduce 18
	tSTRING  reduce 18
	tPUBLIC  reduce 18
	tUSE  reduce 18
	tPROCEDURE  reduce 18
	tINT  reduce 18
	tREAL  reduce 18
	tIF  reduce 18
	tWHILE  reduce 18
	tSWEEP  reduce 18
	tNEXT  reduce 18
	tNULL  reduce 18
	tSTOP  reduce 18
	tRETURN  reduce 18
	tREAD  reduce 18
	'~'  reduce 18
	'+'  reduce 18
	'-'  reduce 18
	'['  reduce 18
	'('  reduce 18
	'}'  reduce 18

	block  goto 122


state 93
	function : tUSE type tIDENTIFIER '(' functionargs ')' .  (17)

	.  reduce 17


state 94
	block : '{' . '}'  (38)
	block : '{' . declarations '}'  (39)
	block : '{' . list '}'  (40)
	block : '{' . declarations list '}'  (41)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 123
	tPUBLIC  shift 2
	tUSE  shift 3
	tPROCEDURE  shift 4
	tINT  shift 5
	tREAL  shift 6
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'['  shift 7
	'('  shift 53
	'{'  shift 94
	'}'  shift 130
	.  error

	stmt  goto 131
	declaration  goto 9
	var  goto 10
	list  goto 132
	declarations  goto 133
	expr  goto 134
	literal  goto 55
	lval  goto 56
	type  goto 12
	function  goto 13
	block  goto 135
	string  goto 57


state 95
	function : tPROCEDURE tIDENTIFIER '(' functionargs ')' block .  (25)

	.  reduce 25


state 96
	functionargs : functionargs ',' functionarg .  (32)

	.  reduce 32


state 97
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs . ')'  (15)
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs . ')' block  (22)
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs . ')' '=' literal block  (26)
	functionargs : functionargs . ',' functionarg  (32)

	')'  shift 136
	','  shift 64
	.  error


state 98
	function : tPROCEDURE tUSE type_void tIDENTIFIER '(' functionargs . ')'  (14)
	functionargs : functionargs . ',' functionarg  (32)

	')'  shift 137
	','  shift 64
	.  error


state 99
	function : tPROCEDURE type_void tIDENTIFIER '(' functionargs ')' . block  (21)

	'{'  shift 94
	.  error

	block  goto 138


state 100
	expr : tIDENTIFIER '(' argscall . ')'  (85)

	')'  shift 139
	.  error


state 101
	argscall : calls .  (92)
	calls : calls . ',' expr  (94)

	','  shift 140
	')'  reduce 92


state 102
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	calls : expr .  (93)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  reduce 93
	','  reduce 93


state 103
	expr : '(' expr ')' .  (80)

	.  reduce 80


state 104
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr tAND expr .  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 78
	tPRINTLN  reduce 78
	tAND  reduce 78
	tOR  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	';'  reduce 78
	')'  reduce 78
	','  reduce 78
	']'  reduce 78
	':'  reduce 78


state 105
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	expr : expr tOR expr .  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 79
	tPRINTLN  reduce 79
	tOR  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	';'  reduce 79
	')'  reduce 79
	','  reduce 79
	']'  reduce 79
	':'  reduce 79


state 106
	expr : expr . '+' expr  (67)
	expr : expr '+' expr .  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 67
	tPRINTLN  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	';'  reduce 67
	')'  reduce 67
	','  reduce 67
	']'  reduce 67
	':'  reduce 67


state 107
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr '-' expr .  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 68
	tPRINTLN  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	';'  reduce 68
	')'  reduce 68
	','  reduce 68
	']'  reduce 68
	':'  reduce 68


state 108
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)
	lval : expr '[' expr . ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	']'  shift 141
	.  error


state 109
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr tGE expr .  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 74
	tPRINTLN  reduce 74
	tAND  reduce 74
	tOR  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	'['  reduce 74
	tGE  reduce 74
	tLE  reduce 74
	tEQ  reduce 74
	tNE  reduce 74
	'>'  reduce 74
	'<'  reduce 74
	';'  reduce 74
	')'  reduce 74
	','  reduce 74
	']'  reduce 74
	':'  reduce 74


state 110
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr tLE expr .  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 75
	tPRINTLN  reduce 75
	tAND  reduce 75
	tOR  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	'['  reduce 75
	tGE  reduce 75
	tLE  reduce 75
	tEQ  reduce 75
	tNE  reduce 75
	'>'  reduce 75
	'<'  reduce 75
	';'  reduce 75
	')'  reduce 75
	','  reduce 75
	']'  reduce 75
	':'  reduce 75


state 111
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr tEQ expr .  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 77
	tPRINTLN  reduce 77
	tAND  reduce 77
	tOR  reduce 77
	'+'  reduce 77
	'-'  reduce 77
	'['  reduce 77
	tGE  reduce 77
	tLE  reduce 77
	tEQ  reduce 77
	tNE  reduce 77
	'>'  reduce 77
	'<'  reduce 77
	';'  reduce 77
	')'  reduce 77
	','  reduce 77
	']'  reduce 77
	':'  reduce 77


state 112
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr tNE expr .  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 76
	tPRINTLN  reduce 76
	tAND  reduce 76
	tOR  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'['  reduce 76
	tGE  reduce 76
	tLE  reduce 76
	tEQ  reduce 76
	tNE  reduce 76
	'>'  reduce 76
	'<'  reduce 76
	';'  reduce 76
	')'  reduce 76
	','  reduce 76
	']'  reduce 76
	':'  reduce 76


state 113
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr '>' expr .  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 73
	tPRINTLN  reduce 73
	tAND  reduce 73
	tOR  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'['  reduce 73
	tGE  reduce 73
	tLE  reduce 73
	tEQ  reduce 73
	tNE  reduce 73
	'>'  reduce 73
	'<'  reduce 73
	';'  reduce 73
	')'  reduce 73
	','  reduce 73
	']'  reduce 73
	':'  reduce 73


state 114
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr '<' expr .  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 72
	tPRINTLN  reduce 72
	tAND  reduce 72
	tOR  reduce 72
	'+'  reduce 72
	'-'  reduce 72
	'['  reduce 72
	tGE  reduce 72
	tLE  reduce 72
	tEQ  reduce 72
	tNE  reduce 72
	'>'  reduce 72
	'<'  reduce 72
	';'  reduce 72
	')'  reduce 72
	','  reduce 72
	']'  reduce 72
	':'  reduce 72


state 115
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr '*' expr .  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	.  reduce 69


state 116
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr '/' expr .  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	.  reduce 70


state 117
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr '%' expr .  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	.  reduce 71


state 118
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	expr : lval '=' expr .  (83)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	tPRINT  reduce 83
	tPRINTLN  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	';'  reduce 83
	')'  reduce 83
	','  reduce 83
	']'  reduce 83
	':'  reduce 83


state 119
	function : type tIDENTIFIER '(' functionargs ')' '=' . literal  (19)
	function : type tIDENTIFIER '(' functionargs ')' '=' . literal block  (27)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tSTRING  shift 47
	.  error

	literal  goto 142
	string  goto 57


state 120
	function : type tIDENTIFIER '(' functionargs ')' block .  (23)

	.  reduce 23


state 121
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' '=' . literal  (20)
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' '=' . literal block  (28)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tSTRING  shift 47
	.  error

	literal  goto 143
	string  goto 57


state 122
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' block .  (24)

	.  reduce 24


state 123
	type : tSTRING .  (35)
	string : tSTRING .  (90)

	tIDENTIFIER  reduce 35
	tSTRING  reduce 90
	tPRINT  reduce 90
	tPRINTLN  reduce 90
	tAND  reduce 90
	tOR  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	'['  reduce 90
	tGE  reduce 90
	tLE  reduce 90
	tEQ  reduce 90
	tNE  reduce 90
	'>'  reduce 90
	'<'  reduce 90
	'*'  reduce 90
	'/'  reduce 90
	'%'  reduce 90
	';'  reduce 90


state 124
	stmt : tIF . '(' expr ')' stmt  (46)
	stmt : tIF . '(' expr ')' stmt tELSE stmt  (47)
	stmt : tIF . '(' expr ')' stmt tELSIF elsif  (48)

	'('  shift 144
	.  error


state 125
	stmt : tWHILE . '(' expr ')' stmt  (45)

	'('  shift 145
	.  error


state 126
	stmt : tSWEEP . '+' '(' lval ':' expr ':' expr ')' stmt  (55)
	stmt : tSWEEP . '+' '(' lval ':' expr ':' expr ':' expr ')' stmt  (56)
	stmt : tSWEEP . '-' '(' lval ':' expr ':' expr ':' expr ')' stmt  (57)
	stmt : tSWEEP . '-' '(' lval ':' expr ':' expr ')' stmt  (58)

	'+'  shift 146
	'-'  shift 147
	.  error


state 127
	stmt : tNEXT .  (51)

	.  reduce 51


state 128
	stmt : tSTOP .  (52)

	.  reduce 52


state 129
	stmt : tRETURN .  (53)

	.  reduce 53


state 130
	block : '{' '}' .  (38)

	.  reduce 38


state 131
	list : stmt .  (42)

	.  reduce 42


state 132
	block : '{' list . '}'  (40)
	list : list . stmt  (43)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	'}'  shift 148
	.  error

	stmt  goto 149
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 133
	declarations : declarations . declaration  (4)
	block : '{' declarations . '}'  (39)
	block : '{' declarations . list '}'  (41)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 123
	tPUBLIC  shift 2
	tUSE  shift 3
	tPROCEDURE  shift 4
	tINT  shift 5
	tREAL  shift 6
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'['  shift 7
	'('  shift 53
	'{'  shift 94
	'}'  shift 150
	.  error

	stmt  goto 131
	declaration  goto 23
	var  goto 10
	list  goto 151
	expr  goto 134
	literal  goto 55
	lval  goto 56
	type  goto 12
	function  goto 13
	block  goto 135
	string  goto 57


state 134
	stmt : expr . ';'  (44)
	stmt : expr . tPRINT  (49)
	stmt : expr . tPRINTLN  (50)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tPRINT  shift 152
	tPRINTLN  shift 153
	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	';'  shift 154
	.  error


state 135
	stmt : block .  (54)

	.  reduce 54


state 136
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' .  (15)
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' . block  (22)
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' . '=' literal block  (26)

	'='  shift 155
	'{'  shift 94
	$end  reduce 15
	tINTEGER  reduce 15
	tDOUBLE  reduce 15
	tIDENTIFIER  reduce 15
	tSTRING  reduce 15
	tPUBLIC  reduce 15
	tUSE  reduce 15
	tPROCEDURE  reduce 15
	tINT  reduce 15
	tREAL  reduce 15
	tIF  reduce 15
	tWHILE  reduce 15
	tSWEEP  reduce 15
	tNEXT  reduce 15
	tNULL  reduce 15
	tSTOP  reduce 15
	tRETURN  reduce 15
	tREAD  reduce 15
	'~'  reduce 15
	'+'  reduce 15
	'-'  reduce 15
	'['  reduce 15
	'('  reduce 15
	'}'  reduce 15

	block  goto 156


state 137
	function : tPROCEDURE tUSE type_void tIDENTIFIER '(' functionargs ')' .  (14)

	.  reduce 14


state 138
	function : tPROCEDURE type_void tIDENTIFIER '(' functionargs ')' block .  (21)

	.  reduce 21


state 139
	expr : tIDENTIFIER '(' argscall ')' .  (85)

	.  reduce 85


state 140
	calls : calls ',' . expr  (94)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 157
	literal  goto 55
	lval  goto 56
	string  goto 57


state 141
	lval : expr '[' expr ']' .  (96)

	.  reduce 96


state 142
	function : type tIDENTIFIER '(' functionargs ')' '=' literal .  (19)
	function : type tIDENTIFIER '(' functionargs ')' '=' literal . block  (27)

	'{'  shift 94
	$end  reduce 19
	tINTEGER  reduce 19
	tDOUBLE  reduce 19
	tIDENTIFIER  reduce 19
	tSTRING  reduce 19
	tPUBLIC  reduce 19
	tUSE  reduce 19
	tPROCEDURE  reduce 19
	tINT  reduce 19
	tREAL  reduce 19
	tIF  reduce 19
	tWHILE  reduce 19
	tSWEEP  reduce 19
	tNEXT  reduce 19
	tNULL  reduce 19
	tSTOP  reduce 19
	tRETURN  reduce 19
	tREAD  reduce 19
	'~'  reduce 19
	'+'  reduce 19
	'-'  reduce 19
	'['  reduce 19
	'('  reduce 19
	'}'  reduce 19

	block  goto 158


state 143
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' '=' literal .  (20)
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' '=' literal . block  (28)

	'{'  shift 94
	$end  reduce 20
	tINTEGER  reduce 20
	tDOUBLE  reduce 20
	tIDENTIFIER  reduce 20
	tSTRING  reduce 20
	tPUBLIC  reduce 20
	tUSE  reduce 20
	tPROCEDURE  reduce 20
	tINT  reduce 20
	tREAL  reduce 20
	tIF  reduce 20
	tWHILE  reduce 20
	tSWEEP  reduce 20
	tNEXT  reduce 20
	tNULL  reduce 20
	tSTOP  reduce 20
	tRETURN  reduce 20
	tREAD  reduce 20
	'~'  reduce 20
	'+'  reduce 20
	'-'  reduce 20
	'['  reduce 20
	'('  reduce 20
	'}'  reduce 20

	block  goto 159


state 144
	stmt : tIF '(' . expr ')' stmt  (46)
	stmt : tIF '(' . expr ')' stmt tELSE stmt  (47)
	stmt : tIF '(' . expr ')' stmt tELSIF elsif  (48)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 160
	literal  goto 55
	lval  goto 56
	string  goto 57


state 145
	stmt : tWHILE '(' . expr ')' stmt  (45)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 161
	literal  goto 55
	lval  goto 56
	string  goto 57


state 146
	stmt : tSWEEP '+' . '(' lval ':' expr ':' expr ')' stmt  (55)
	stmt : tSWEEP '+' . '(' lval ':' expr ':' expr ':' expr ')' stmt  (56)

	'('  shift 162
	.  error


state 147
	stmt : tSWEEP '-' . '(' lval ':' expr ':' expr ':' expr ')' stmt  (57)
	stmt : tSWEEP '-' . '(' lval ':' expr ':' expr ')' stmt  (58)

	'('  shift 163
	.  error


state 148
	block : '{' list '}' .  (40)

	.  reduce 40


state 149
	list : list stmt .  (43)

	.  reduce 43


state 150
	block : '{' declarations '}' .  (39)

	.  reduce 39


state 151
	block : '{' declarations list . '}'  (41)
	list : list . stmt  (43)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	'}'  shift 164
	.  error

	stmt  goto 149
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 152
	stmt : expr tPRINT .  (49)

	.  reduce 49


state 153
	stmt : expr tPRINTLN .  (50)

	.  reduce 50


state 154
	stmt : expr ';' .  (44)

	.  reduce 44


state 155
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' '=' . literal block  (26)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tSTRING  shift 47
	.  error

	literal  goto 165
	string  goto 57


state 156
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' block .  (22)

	.  reduce 22


state 157
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	calls : calls ',' expr .  (94)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  reduce 94
	','  reduce 94


state 158
	function : type tIDENTIFIER '(' functionargs ')' '=' literal block .  (27)

	.  reduce 27


state 159
	function : tPUBLIC type tIDENTIFIER '(' functionargs ')' '=' literal block .  (28)

	.  reduce 28


state 160
	stmt : tIF '(' expr . ')' stmt  (46)
	stmt : tIF '(' expr . ')' stmt tELSE stmt  (47)
	stmt : tIF '(' expr . ')' stmt tELSIF elsif  (48)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  shift 166
	.  error


state 161
	stmt : tWHILE '(' expr . ')' stmt  (45)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  shift 167
	.  error


state 162
	stmt : tSWEEP '+' '(' . lval ':' expr ':' expr ')' stmt  (55)
	stmt : tSWEEP '+' '(' . lval ':' expr ':' expr ':' expr ')' stmt  (56)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 168
	literal  goto 55
	lval  goto 169
	string  goto 57


state 163
	stmt : tSWEEP '-' '(' . lval ':' expr ':' expr ':' expr ')' stmt  (57)
	stmt : tSWEEP '-' '(' . lval ':' expr ':' expr ')' stmt  (58)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 168
	literal  goto 55
	lval  goto 170
	string  goto 57


state 164
	block : '{' declarations list '}' .  (41)

	.  reduce 41


state 165
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' '=' literal . block  (26)

	'{'  shift 94
	.  error

	block  goto 171


state 166
	stmt : tIF '(' expr ')' . stmt  (46)
	stmt : tIF '(' expr ')' . stmt tELSE stmt  (47)
	stmt : tIF '(' expr ')' . stmt tELSIF elsif  (48)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 172
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 167
	stmt : tWHILE '(' expr ')' . stmt  (45)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 173
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 168
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	.  error


state 169
	stmt : tSWEEP '+' '(' lval . ':' expr ':' expr ')' stmt  (55)
	stmt : tSWEEP '+' '(' lval . ':' expr ':' expr ':' expr ')' stmt  (56)
	expr : lval .  (82)
	expr : lval . '=' expr  (83)
	expr : lval . '?'  (84)

	'='  shift 88
	':'  shift 174
	'?'  shift 89
	tAND  reduce 82
	tOR  reduce 82
	'+'  reduce 82
	'-'  reduce 82
	'['  reduce 82
	tGE  reduce 82
	tLE  reduce 82
	tEQ  reduce 82
	tNE  reduce 82
	'>'  reduce 82
	'<'  reduce 82
	'*'  reduce 82
	'/'  reduce 82
	'%'  reduce 82


state 170
	stmt : tSWEEP '-' '(' lval . ':' expr ':' expr ':' expr ')' stmt  (57)
	stmt : tSWEEP '-' '(' lval . ':' expr ':' expr ')' stmt  (58)
	expr : lval .  (82)
	expr : lval . '=' expr  (83)
	expr : lval . '?'  (84)

	'='  shift 88
	':'  shift 175
	'?'  shift 89
	tAND  reduce 82
	tOR  reduce 82
	'+'  reduce 82
	'-'  reduce 82
	'['  reduce 82
	tGE  reduce 82
	tLE  reduce 82
	tEQ  reduce 82
	tNE  reduce 82
	'>'  reduce 82
	'<'  reduce 82
	'*'  reduce 82
	'/'  reduce 82
	'%'  reduce 82


state 171
	function : tPROCEDURE tPUBLIC type_void tIDENTIFIER '(' functionargs ')' '=' literal block .  (26)

	.  reduce 26


state 172
	stmt : tIF '(' expr ')' stmt .  (46)
	stmt : tIF '(' expr ')' stmt . tELSE stmt  (47)
	stmt : tIF '(' expr ')' stmt . tELSIF elsif  (48)

	tELSIF  shift 176
	tELSE  shift 177
	tINTEGER  reduce 46
	tDOUBLE  reduce 46
	tIDENTIFIER  reduce 46
	tSTRING  reduce 46
	tIF  reduce 46
	tWHILE  reduce 46
	tSWEEP  reduce 46
	tNEXT  reduce 46
	tNULL  reduce 46
	tSTOP  reduce 46
	tRETURN  reduce 46
	tREAD  reduce 46
	'~'  reduce 46
	'+'  reduce 46
	'-'  reduce 46
	'('  reduce 46
	'{'  reduce 46
	'}'  reduce 46


state 173
	stmt : tWHILE '(' expr ')' stmt .  (45)

	.  reduce 45


state 174
	stmt : tSWEEP '+' '(' lval ':' . expr ':' expr ')' stmt  (55)
	stmt : tSWEEP '+' '(' lval ':' . expr ':' expr ':' expr ')' stmt  (56)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 178
	literal  goto 55
	lval  goto 56
	string  goto 57


state 175
	stmt : tSWEEP '-' '(' lval ':' . expr ':' expr ':' expr ')' stmt  (57)
	stmt : tSWEEP '-' '(' lval ':' . expr ':' expr ')' stmt  (58)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 179
	literal  goto 55
	lval  goto 56
	string  goto 57


state 176
	stmt : tIF '(' expr ')' stmt tELSIF . elsif  (48)

	'('  shift 180
	.  error

	elsif  goto 181


state 177
	stmt : tIF '(' expr ')' stmt tELSE . stmt  (47)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 182
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 178
	stmt : tSWEEP '+' '(' lval ':' expr . ':' expr ')' stmt  (55)
	stmt : tSWEEP '+' '(' lval ':' expr . ':' expr ':' expr ')' stmt  (56)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	':'  shift 183
	.  error


state 179
	stmt : tSWEEP '-' '(' lval ':' expr . ':' expr ':' expr ')' stmt  (57)
	stmt : tSWEEP '-' '(' lval ':' expr . ':' expr ')' stmt  (58)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	':'  shift 184
	.  error


state 180
	elsif : '(' . expr ')' stmt  (59)
	elsif : '(' . expr ')' stmt tELSE stmt  (60)
	elsif : '(' . expr ')' stmt tELSIF elsif  (61)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 185
	literal  goto 55
	lval  goto 56
	string  goto 57


state 181
	stmt : tIF '(' expr ')' stmt tELSIF elsif .  (48)

	.  reduce 48


state 182
	stmt : tIF '(' expr ')' stmt tELSE stmt .  (47)

	.  reduce 47


state 183
	stmt : tSWEEP '+' '(' lval ':' expr ':' . expr ')' stmt  (55)
	stmt : tSWEEP '+' '(' lval ':' expr ':' . expr ':' expr ')' stmt  (56)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 186
	literal  goto 55
	lval  goto 56
	string  goto 57


state 184
	stmt : tSWEEP '-' '(' lval ':' expr ':' . expr ':' expr ')' stmt  (57)
	stmt : tSWEEP '-' '(' lval ':' expr ':' . expr ')' stmt  (58)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 187
	literal  goto 55
	lval  goto 56
	string  goto 57


state 185
	elsif : '(' expr . ')' stmt  (59)
	elsif : '(' expr . ')' stmt tELSE stmt  (60)
	elsif : '(' expr . ')' stmt tELSIF elsif  (61)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  shift 188
	.  error


state 186
	stmt : tSWEEP '+' '(' lval ':' expr ':' expr . ')' stmt  (55)
	stmt : tSWEEP '+' '(' lval ':' expr ':' expr . ':' expr ')' stmt  (56)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  shift 189
	':'  shift 190
	.  error


state 187
	stmt : tSWEEP '-' '(' lval ':' expr ':' expr . ':' expr ')' stmt  (57)
	stmt : tSWEEP '-' '(' lval ':' expr ':' expr . ')' stmt  (58)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  shift 191
	':'  shift 192
	.  error


state 188
	elsif : '(' expr ')' . stmt  (59)
	elsif : '(' expr ')' . stmt tELSE stmt  (60)
	elsif : '(' expr ')' . stmt tELSIF elsif  (61)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 193
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 189
	stmt : tSWEEP '+' '(' lval ':' expr ':' expr ')' . stmt  (55)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 194
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 190
	stmt : tSWEEP '+' '(' lval ':' expr ':' expr ':' . expr ')' stmt  (56)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 195
	literal  goto 55
	lval  goto 56
	string  goto 57


state 191
	stmt : tSWEEP '-' '(' lval ':' expr ':' expr ')' . stmt  (58)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 196
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 192
	stmt : tSWEEP '-' '(' lval ':' expr ':' expr ':' . expr ')' stmt  (57)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tNULL  shift 48
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	.  error

	expr  goto 197
	literal  goto 55
	lval  goto 56
	string  goto 57


state 193
	elsif : '(' expr ')' stmt .  (59)
	elsif : '(' expr ')' stmt . tELSE stmt  (60)
	elsif : '(' expr ')' stmt . tELSIF elsif  (61)

	tELSIF  shift 198
	tELSE  shift 199
	tINTEGER  reduce 59
	tDOUBLE  reduce 59
	tIDENTIFIER  reduce 59
	tSTRING  reduce 59
	tIF  reduce 59
	tWHILE  reduce 59
	tSWEEP  reduce 59
	tNEXT  reduce 59
	tNULL  reduce 59
	tSTOP  reduce 59
	tRETURN  reduce 59
	tREAD  reduce 59
	'~'  reduce 59
	'+'  reduce 59
	'-'  reduce 59
	'('  reduce 59
	'{'  reduce 59
	'}'  reduce 59


state 194
	stmt : tSWEEP '+' '(' lval ':' expr ':' expr ')' stmt .  (55)

	.  reduce 55


state 195
	stmt : tSWEEP '+' '(' lval ':' expr ':' expr ':' expr . ')' stmt  (56)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  shift 200
	.  error


state 196
	stmt : tSWEEP '-' '(' lval ':' expr ':' expr ')' stmt .  (58)

	.  reduce 58


state 197
	stmt : tSWEEP '-' '(' lval ':' expr ':' expr ':' expr . ')' stmt  (57)
	expr : expr . '+' expr  (67)
	expr : expr . '-' expr  (68)
	expr : expr . '*' expr  (69)
	expr : expr . '/' expr  (70)
	expr : expr . '%' expr  (71)
	expr : expr . '<' expr  (72)
	expr : expr . '>' expr  (73)
	expr : expr . tGE expr  (74)
	expr : expr . tLE expr  (75)
	expr : expr . tNE expr  (76)
	expr : expr . tEQ expr  (77)
	expr : expr . tAND expr  (78)
	expr : expr . tOR expr  (79)
	lval : expr . '[' expr ']'  (96)

	tAND  shift 74
	tOR  shift 75
	'+'  shift 76
	'-'  shift 77
	'['  shift 78
	tGE  shift 79
	tLE  shift 80
	tEQ  shift 81
	tNE  shift 82
	'>'  shift 83
	'<'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	')'  shift 201
	.  error


state 198
	elsif : '(' expr ')' stmt tELSIF . elsif  (61)

	'('  shift 180
	.  error

	elsif  goto 202


state 199
	elsif : '(' expr ')' stmt tELSE . stmt  (60)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 203
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 200
	stmt : tSWEEP '+' '(' lval ':' expr ':' expr ':' expr ')' . stmt  (56)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 204
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 201
	stmt : tSWEEP '-' '(' lval ':' expr ':' expr ':' expr ')' . stmt  (57)

	tINTEGER  shift 44
	tDOUBLE  shift 45
	tIDENTIFIER  shift 46
	tSTRING  shift 47
	tIF  shift 124
	tWHILE  shift 125
	tSWEEP  shift 126
	tNEXT  shift 127
	tNULL  shift 48
	tSTOP  shift 128
	tRETURN  shift 129
	tREAD  shift 49
	'~'  shift 50
	'+'  shift 51
	'-'  shift 52
	'('  shift 53
	'{'  shift 94
	.  error

	stmt  goto 205
	expr  goto 134
	literal  goto 55
	lval  goto 56
	block  goto 135
	string  goto 57


state 202
	elsif : '(' expr ')' stmt tELSIF elsif .  (61)

	.  reduce 61


state 203
	elsif : '(' expr ')' stmt tELSE stmt .  (60)

	.  reduce 60


state 204
	stmt : tSWEEP '+' '(' lval ':' expr ':' expr ':' expr ')' stmt .  (56)

	.  reduce 56


state 205
	stmt : tSWEEP '-' '(' lval ':' expr ':' expr ':' expr ')' stmt .  (57)

	.  reduce 57


56 terminals, 20 nonterminals
97 grammar rules, 206 states
